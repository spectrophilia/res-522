/**
 * Library reactors for the IMU on the 
 * <a href="https://www.pololu.com/docs/0J86">Pololu 3pi+ 2040 robot</a>.
 * Note that these reactors rely on the fact that they are executed in an unthreaded
 * runtime. To adapt them for a threaded runtime, they will need to use mutual
 * exclusion to ensure that multiple instances of the reactors are not simultaneously
 * accessing the shared hardware resource.
 * 
 * @author Abhi Gundrala
 * @author Edward A. Lee
 */
target C {
  platform: {
    name: "rp2040",
    board: "pololu_3pi_2040_robot"
  },
  threading: false
}

preamble {=
  #include <pico/stdlib.h>
  #include <imu.h>
  #include<math.h>

  #define PI 3.14159265
=}

main reactor {
    a = new Accelerometer()
    d = new Display()
    timer t(0, 250 msec)
    reaction(t) -> a.trigger {=
        lf_set(a.trigger, true);
    =}

    reaction(a.x, a.y, a.z) -> d.line0, d.line1, d.line2 {=
        /// TODO: define max string size for line
        /// based on font you can have 4 or 8 lines 
        static char buf0[17];
        static char buf1[17];
        static char buf2[17];

        
        snprintf(buf0, 17, "x:%2.4f", a.x->value);
        snprintf(buf1, 17, "y:%2.4f", a.y->value);
        snprintf(buf2, 17, "z:%2.4f", a.z->value);
        
        lf_set(d.line0, buf0);
        lf_set(d.line1, buf1);
        lf_set(d.line2, buf2);
    =}
}