#include <math.h>

// #define 

target C {
    platform: "RP2040",
    threading: false,
}

import Tilt from "lib/tilt.lf"
import Display from "lib/Display.lf"

main reactor {
    T = new Tilt()
    d = new Display()
    timer t(0, 250 msec)
    reaction(t) -> T.trigger {=
        lf_set(T.trigger, true);
    =}

    reaction(T.roll, T.pitch) -> d.line0, d.line1 {=
        /// TODO: define max string size for line
        /// based on font you can have 4 or 8 lines 
        static char buf0[17];
        static char buf1[17];
        // static char buf2[17];

        snprintf(buf0, 17, "roll:%2.4f", T.roll->value);
        snprintf(buf1, 17, "pitch:%2.4f", T.pitch->value);
        // snprintf(buf2, 17, "z:%2.4f", a.z->value);
        
        lf_set(d.line0, buf0);
        lf_set(d.line1, buf1);
        // lf_set(d.line2, buf2);
    =}
    // reaction() {
    //     ax = a.x->value;    
    //     ay = a.y->value;    
    //     az = a.z->value;    
    // }
    // a = new Accelerometer()
    // d = new Display()
    // timer t(0, 1000 msec)
    // reaction(t) -> a.trigger {=
    //     lf_set(a.trigger, true);
    // =}
    // reaction(a.x, a.y, a.z) -> d.line0, d.line1, d.line2 {=
    //     static char buf0[17];
    //     static char buf1[17];
    //     static char buf2[17];
    //     float ax;
    //     float ay;
    //     float az;
    //     float roll;
    //     float pitch;

    //     ax = a.x->value;
    //     ay = a.y->value;
    //     az = a.z->value;

    //     float M_PI = 3.14;

    //     roll = atan2(ay, az);
    //     pitch = atan2(ax, sqrt(ay * ay + az * az)) ;
    //     roll = roll * 180.0 / M_PI;
    //     pitch = pitch * 180.0 / M_PI;

    //     snprintf(buf0, 17, "r:%2.3f", roll);
    //     snprintf(buf1, 17, "p:%2.3f", pitch);
    //     // snprintf(buf2, 17, "p:%2.3f", az);
        
    //     lf_set(d.line0, buf0);
    //     lf_set(d.line1, buf1);
    //     // lf_set(d.line2, buf2);
    // =}
}